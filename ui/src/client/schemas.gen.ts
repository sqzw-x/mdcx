// This file is auto-generated by @hey-api/openapi-ts

export const CDCharSchema = {
    type: 'string',
    enum: ['letter', 'endc', 'digital', 'middle_number', 'underline', 'space', 'point'],
    title: 'CDChar',
    showNames: ['除C以外的字母', 'C结尾也视为分集而非字幕', '末尾两位数字', '不在结尾的数字', '分集分隔符: 下划线', '分集分隔符: 空格', '分集分隔符: 英文句号']
} as const;

export const CleanActionSchema = {
    type: 'string',
    enum: ['clean_ext', 'clean_name', 'clean_contains', 'clean_size', 'clean_ignore_ext', 'clean_ignore_contains', 'i_know', 'i_agree', 'auto_clean'],
    title: 'CleanAction',
    showNames: ['清理指定后缀文件', '清理指定文件名', '清理包含特定字符串的文件', '清理小于指定大小的文件', '忽略指定后缀', '忽略包含特定字符串的文件', '我知道', '我同意', '自动清理']
} as const;

export const ConfigSchema = {
    properties: {
        media_path: {
            type: 'string',
            title: '媒体路径',
            default: '.',
            uiSchema: {
                customProps: {
                    initialPath: '/Users/srz',
                    multiple: false,
                    type: 'directory'
                },
                'ui:field': 'serverPath'
            }
        },
        softlink_path: {
            type: 'string',
            title: '软链接路径',
            default: 'softlink',
            uiSchema: {
                customProps: {
                    initialPath: '.',
                    multiple: false,
                    refField: 'media_path',
                    type: 'directory'
                },
                'ui:field': 'serverPath'
            }
        },
        success_output_folder: {
            type: 'string',
            title: '成功输出目录',
            default: 'JAV_output',
            uiSchema: {
                customProps: {
                    initialPath: '.',
                    multiple: false,
                    refField: 'media_path',
                    type: 'directory'
                },
                'ui:field': 'serverPath'
            }
        },
        failed_output_folder: {
            type: 'string',
            title: '失败输出目录',
            default: 'failed',
            uiSchema: {
                customProps: {
                    initialPath: '.',
                    multiple: false,
                    refField: 'media_path',
                    type: 'directory'
                },
                'ui:field': 'serverPath'
            }
        },
        extrafanart_folder: {
            type: 'string',
            title: '额外剧照目录',
            default: 'extrafanart_copy'
        },
        media_type: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '媒体类型'
        },
        sub_type: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '字幕类型'
        },
        scrape_softlink_path: {
            type: 'boolean',
            title: '刮削软链接路径',
            default: false
        },
        auto_link: {
            type: 'boolean',
            title: '自动链接',
            default: false
        },
        folders: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '要处理的目录'
        },
        string: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '要从文件名中删除的字符串'
        },
        file_size: {
            type: 'number',
            title: '要处理的最小文件大小（MB）',
            default: 100
        },
        no_escape: {
            items: {
                '$ref': '#/components/schemas/NoEscape'
            },
            type: 'array',
            title: '不转义的字符串'
        },
        clean_ext: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '清理规则: 扩展名'
        },
        clean_name: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '清理规则: 文件名(完全匹配)'
        },
        clean_contains: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '清理规则: 文件名包含'
        },
        clean_size: {
            type: 'number',
            title: '清理小于此大小的文件（MB）',
            default: 0
        },
        clean_ignore_ext: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '清理规则: 排除扩展名'
        },
        clean_ignore_contains: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '清理规则: 排除文件名包含'
        },
        clean_enable: {
            items: {
                '$ref': '#/components/schemas/CleanAction'
            },
            type: 'array',
            title: '启用的清理规则'
        },
        thread_number: {
            type: 'integer',
            title: '线程数',
            default: 10
        },
        thread_time: {
            type: 'integer',
            title: '线程时间',
            default: 0
        },
        javdb_time: {
            type: 'integer',
            title: 'Javdb时间',
            default: 10
        },
        main_mode: {
            type: 'integer',
            title: '主模式',
            default: 1
        },
        read_mode: {
            items: {
                '$ref': '#/components/schemas/ReadMode'
            },
            type: 'array',
            title: '读取模式'
        },
        update_mode: {
            type: 'string',
            title: '更新模式',
            default: 'c'
        },
        update_a_folder: {
            type: 'string',
            title: '更新A目录',
            default: 'actor'
        },
        update_b_folder: {
            type: 'string',
            title: '更新B目录',
            default: 'number actor'
        },
        update_c_filetemplate: {
            type: 'string',
            title: '更新C文件模板',
            default: 'number'
        },
        update_d_folder: {
            type: 'string',
            title: '更新D目录',
            default: 'number actor'
        },
        update_titletemplate: {
            type: 'string',
            title: '更新标题模板',
            default: 'number title'
        },
        soft_link: {
            type: 'integer',
            title: '软链接',
            default: 0
        },
        success_file_move: {
            type: 'boolean',
            title: '成功后移动文件',
            default: true
        },
        failed_file_move: {
            type: 'boolean',
            title: '失败后移动文件',
            default: true
        },
        success_file_rename: {
            type: 'boolean',
            title: '成功后重命名文件',
            default: true
        },
        del_empty_folder: {
            type: 'boolean',
            title: '删除空目录',
            default: true
        },
        show_poster: {
            type: 'boolean',
            title: '显示海报',
            default: true
        },
        download_files: {
            items: {
                '$ref': '#/components/schemas/DownloadableFile'
            },
            type: 'array',
            title: '下载文件类型'
        },
        keep_files: {
            items: {
                '$ref': '#/components/schemas/KeepableFile'
            },
            type: 'array',
            title: '保留文件类型'
        },
        download_hd_pics: {
            items: {
                '$ref': '#/components/schemas/HDPicSource'
            },
            type: 'array',
            title: '高清图片来源'
        },
        google_used: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Google使用'
        },
        google_exclude: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Google排除'
        },
        scrape_like: {
            type: 'string',
            title: '刮削收藏',
            default: 'info'
        },
        website_single: {
            '$ref': '#/components/schemas/Website',
            title: '单个网站',
            default: 'airav_cc'
        },
        website_youma: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '有码网站源'
        },
        website_wuma: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '无码网站源'
        },
        website_suren: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '素人网站源'
        },
        website_fc2: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: 'FC2网站源'
        },
        website_oumei: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '欧美网站源'
        },
        website_guochan: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '国产网站源'
        },
        whole_fields: {
            items: {
                '$ref': '#/components/schemas/WholeField'
            },
            type: 'array',
            title: '完整字段'
        },
        none_fields: {
            items: {
                '$ref': '#/components/schemas/NoneField'
            },
            type: 'array',
            title: '空字段'
        },
        website_set: {
            items: {
                '$ref': '#/components/schemas/WebsiteSet'
            },
            type: 'array',
            title: '网站设置'
        },
        title_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '标题网站源'
        },
        title_zh_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '中文标题网站源'
        },
        title_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的标题网站源'
        },
        outline_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '简介网站源'
        },
        outline_zh_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '中文简介网站源'
        },
        outline_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的简介网站源'
        },
        actor_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '演员网站源'
        },
        actor_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的演员网站源'
        },
        thumb_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '缩略图网站源'
        },
        thumb_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的缩略图网站源'
        },
        poster_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '海报网站源'
        },
        poster_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的海报网站源'
        },
        extrafanart_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '剧照网站源'
        },
        extrafanart_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的剧照网站源'
        },
        trailer_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '预告片网站源'
        },
        trailer_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的预告片网站源'
        },
        tag_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '标签网站源'
        },
        tag_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的标签网站源'
        },
        release_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '发布日期网站源'
        },
        release_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的发布日期网站源'
        },
        runtime_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '时长网站源'
        },
        runtime_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的时长网站源'
        },
        score_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '评分网站源'
        },
        score_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的评分网站源'
        },
        director_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '导演网站源'
        },
        director_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的导演网站源'
        },
        series_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '系列网站源'
        },
        series_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的系列网站源'
        },
        studio_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '工作室网站源'
        },
        studio_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的工作室网站源'
        },
        publisher_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '发行商网站源'
        },
        publisher_website_exclude: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '排除的发行商网站源'
        },
        wanted_website: {
            items: {
                '$ref': '#/components/schemas/Website'
            },
            type: 'array',
            title: '想看网站源'
        },
        translate_by: {
            items: {
                '$ref': '#/components/schemas/Translator'
            },
            type: 'array',
            title: '翻译服务'
        },
        deepl_key: {
            type: 'string',
            title: 'Deepl密钥',
            default: ''
        },
        llm_url: {
            type: 'string',
            maxLength: 2083,
            minLength: 1,
            format: 'uri',
            title: 'Llm网址',
            default: 'https://api.llm.com/v1'
        },
        llm_model: {
            type: 'string',
            title: 'Llm模型',
            default: 'gpt-3.5-turbo'
        },
        llm_key: {
            type: 'string',
            title: 'Llm密钥',
            default: ''
        },
        llm_prompt: {
            type: 'string',
            title: 'Llm提示',
            default: `Please translate the following text to {lang}. Output only the translation without any explanation.
{content}`
        },
        llm_max_req_sec: {
            type: 'number',
            title: 'Llm每秒最大请求数',
            default: 1
        },
        llm_max_try: {
            type: 'integer',
            title: 'Llm最大尝试次数',
            default: 5
        },
        llm_temperature: {
            type: 'number',
            title: 'Llm温度',
            default: 0.2
        },
        title_language: {
            type: 'string',
            title: '标题语言',
            default: 'zh_cn'
        },
        title_sehua: {
            type: 'boolean',
            title: '标题色花',
            default: true
        },
        title_yesjav: {
            type: 'boolean',
            title: '标题Yesjav',
            default: false
        },
        title_translate: {
            type: 'boolean',
            title: '翻译标题',
            default: true
        },
        title_sehua_zh: {
            type: 'boolean',
            title: '中文标题色花',
            default: true
        },
        outline_language: {
            type: 'string',
            title: '简介语言',
            default: 'zh_cn'
        },
        outline_translate: {
            type: 'boolean',
            title: '翻译简介',
            default: true
        },
        outline_show: {
            items: {
                '$ref': '#/components/schemas/OutlineShow'
            },
            type: 'array',
            title: '显示大纲'
        },
        actor_language: {
            type: 'string',
            title: '演员语言',
            default: 'zh_cn'
        },
        actor_realname: {
            type: 'boolean',
            title: '演员真名',
            default: true
        },
        actor_translate: {
            type: 'boolean',
            title: '翻译演员',
            default: true
        },
        tag_language: {
            type: 'string',
            title: '标签语言',
            default: 'zh_cn'
        },
        tag_translate: {
            type: 'boolean',
            title: '翻译标签',
            default: true
        },
        tag_include: {
            items: {
                '$ref': '#/components/schemas/TagInclude'
            },
            type: 'array',
            title: '包含标签'
        },
        director_language: {
            type: 'string',
            title: '导演语言',
            default: 'zh_cn'
        },
        director_translate: {
            type: 'boolean',
            title: '翻译导演',
            default: true
        },
        series_language: {
            type: 'string',
            title: '系列语言',
            default: 'zh_cn'
        },
        series_translate: {
            type: 'boolean',
            title: '翻译系列',
            default: true
        },
        studio_language: {
            type: 'string',
            title: '工作室语言',
            default: 'zh_cn'
        },
        studio_translate: {
            type: 'boolean',
            title: '翻译工作室',
            default: true
        },
        publisher_language: {
            type: 'string',
            title: '发行商语言',
            default: 'zh_cn'
        },
        publisher_translate: {
            type: 'boolean',
            title: '翻译发行商',
            default: true
        },
        nfo_include_new: {
            items: {
                '$ref': '#/components/schemas/NfoInclude'
            },
            type: 'array',
            title: 'NFO包含内容'
        },
        nfo_tagline: {
            type: 'string',
            title: 'NFO标语',
            default: '发行日期 release'
        },
        nfo_tag_series: {
            type: 'string',
            title: 'NFO系列标签',
            default: '系列: series'
        },
        nfo_tag_studio: {
            type: 'string',
            title: 'NFO工作室标签',
            default: '片商: studio'
        },
        nfo_tag_publisher: {
            type: 'string',
            title: 'NFO发行商标签',
            default: '发行: publisher'
        },
        nfo_tag_actor: {
            type: 'string',
            title: 'NFO演员标签',
            default: 'actor'
        },
        nfo_tag_actor_contains: {
            type: 'string',
            title: 'NFO演员包含标签',
            default: ''
        },
        folder_name: {
            type: 'string',
            title: '目录名称',
            default: 'actor/number actor'
        },
        naming_file: {
            type: 'string',
            title: '文件命名',
            default: 'number'
        },
        naming_media: {
            type: 'string',
            title: '媒体命名',
            default: 'number title'
        },
        prevent_char: {
            type: 'string',
            title: '禁止字符',
            default: ''
        },
        fields_rule: {
            items: {
                '$ref': '#/components/schemas/FieldRule'
            },
            type: 'array',
            title: '字段规则'
        },
        suffix_sort: {
            items: {
                '$ref': '#/components/schemas/SuffixSort'
            },
            type: 'array',
            title: '后缀排序'
        },
        actor_no_name: {
            type: 'string',
            title: '未知演员名称',
            default: '未知演员'
        },
        release_rule: {
            type: 'string',
            title: '发布规则',
            default: 'YYYY-MM-DD'
        },
        folder_name_max: {
            type: 'integer',
            title: '目录名称最大长度',
            default: 60
        },
        file_name_max: {
            type: 'integer',
            title: '文件名称最大长度',
            default: 60
        },
        actor_name_max: {
            type: 'integer',
            title: '演员名称最大数量',
            default: 3
        },
        actor_name_more: {
            type: 'string',
            title: '更多演员名称',
            default: '等演员'
        },
        umr_style: {
            type: 'string',
            title: 'UMR样式',
            default: '-破解'
        },
        leak_style: {
            type: 'string',
            title: '泄露样式',
            default: '-流出'
        },
        wuma_style: {
            type: 'string',
            title: '无码样式',
            default: ''
        },
        youma_style: {
            type: 'string',
            title: '有码样式',
            default: ''
        },
        show_moword: {
            items: {
                '$ref': '#/components/schemas/ShowLocation'
            },
            type: 'array',
            title: '显示魔词位置'
        },
        show_4k: {
            items: {
                '$ref': '#/components/schemas/ShowLocation'
            },
            type: 'array',
            title: '显示4K位置'
        },
        cd_name: {
            type: 'integer',
            title: 'CD名称',
            default: 0
        },
        cd_char: {
            items: {
                '$ref': '#/components/schemas/CDChar'
            },
            type: 'array',
            title: 'CD字符'
        },
        pic_simple_name: {
            type: 'boolean',
            title: '图片简化命名',
            default: false
        },
        trailer_simple_name: {
            type: 'boolean',
            title: '预告片简化命名',
            default: true
        },
        hd_name: {
            type: 'string',
            title: '高清名称',
            default: 'height'
        },
        hd_get: {
            type: 'string',
            title: '获取高清',
            default: 'video'
        },
        cnword_char: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: '中文字符'
        },
        cnword_style: {
            type: 'string',
            title: '中文样式',
            default: '^-C^'
        },
        folder_cnword: {
            type: 'boolean',
            title: '目录中文',
            default: true
        },
        file_cnword: {
            type: 'boolean',
            title: '文件中文',
            default: true
        },
        subtitle_folder: {
            type: 'string',
            title: '字幕目录',
            default: ''
        },
        subtitle_add: {
            type: 'boolean',
            title: '添加字幕',
            default: false
        },
        subtitle_add_chs: {
            type: 'boolean',
            title: '添加中文字幕',
            default: true
        },
        subtitle_add_rescrape: {
            type: 'boolean',
            title: '重新刮削时添加字幕',
            default: true
        },
        server_type: {
            type: 'string',
            title: '服务器类型',
            default: 'emby'
        },
        emby_url: {
            type: 'string',
            maxLength: 2083,
            minLength: 1,
            format: 'uri',
            title: 'Emby网址',
            default: 'http://127.0.0.1:8096/'
        },
        api_key: {
            type: 'string',
            title: 'API密钥',
            default: 'ee9a2f2419704257b1dd60b975f2d64e'
        },
        user_id: {
            type: 'string',
            title: '用户ID',
            default: ''
        },
        emby_on: {
            items: {
                '$ref': '#/components/schemas/EmbyAction'
            },
            type: 'array',
            title: 'Emby功能开关'
        },
        use_database: {
            type: 'integer',
            title: '使用数据库',
            default: 0
        },
        info_database_path: {
            type: 'string',
            title: '信息数据库路径',
            default: ''
        },
        gfriends_github: {
            type: 'string',
            maxLength: 2083,
            minLength: 1,
            format: 'uri',
            title: 'Gfriends Github',
            default: 'https://github.com/gfriends/gfriends'
        },
        actor_photo_folder: {
            type: 'string',
            title: '演员照片目录',
            default: ''
        },
        actor_photo_kodi_auto: {
            type: 'boolean',
            title: '演员照片Kodi自动',
            default: false
        },
        poster_mark: {
            type: 'integer',
            title: '海报水印',
            default: 1
        },
        thumb_mark: {
            type: 'integer',
            title: '缩略图水印',
            default: 1
        },
        fanart_mark: {
            type: 'integer',
            title: 'Fanart水印',
            default: 0
        },
        mark_size: {
            type: 'integer',
            title: '水印大小',
            default: 5
        },
        mark_type: {
            items: {
                '$ref': '#/components/schemas/MarkType'
            },
            type: 'array',
            title: '水印类型'
        },
        mark_fixed: {
            type: 'string',
            title: '固定水印',
            default: 'not_fixed'
        },
        mark_pos: {
            type: 'string',
            title: '水印位置',
            default: 'top_left'
        },
        mark_pos_corner: {
            type: 'string',
            title: '边角水印位置',
            default: 'top_left'
        },
        mark_pos_sub: {
            type: 'string',
            title: '字幕水印位置',
            default: 'top_left'
        },
        mark_pos_mosaic: {
            type: 'string',
            title: '马赛克水印位置',
            default: 'top_right'
        },
        mark_pos_hd: {
            type: 'string',
            title: '高清水印位置',
            default: 'bottom_right'
        },
        proxy_type: {
            type: 'string',
            title: '代理类型',
            default: 'no'
        },
        proxy: {
            type: 'string',
            title: '代理地址',
            default: '127.0.0.1:7890'
        },
        timeout: {
            type: 'integer',
            title: '超时',
            default: 10
        },
        retry: {
            type: 'integer',
            title: '重试',
            default: 3
        },
        theporndb_api_token: {
            type: 'string',
            title: 'Theporndb API令牌',
            default: ''
        },
        javdb: {
            type: 'string',
            title: 'Javdb',
            default: ''
        },
        javbus: {
            type: 'string',
            title: 'Javbus',
            default: ''
        },
        show_web_log: {
            type: 'boolean',
            title: '显示网页日志',
            default: false
        },
        show_from_log: {
            type: 'boolean',
            title: '显示来源日志',
            default: true
        },
        show_data_log: {
            type: 'boolean',
            title: '显示数据日志',
            default: true
        },
        save_log: {
            type: 'boolean',
            title: '保存日志',
            default: true
        },
        update_check: {
            type: 'boolean',
            title: '检查更新',
            default: true
        },
        local_library: {
            type: 'string',
            title: '本地库',
            default: ''
        },
        actors_name: {
            type: 'string',
            title: '演员名称',
            default: ''
        },
        netdisk_path: {
            type: 'string',
            title: '网盘路径',
            default: ''
        },
        localdisk_path: {
            type: 'string',
            title: '本地磁盘路径',
            default: ''
        },
        window_title: {
            type: 'string',
            title: '窗口标题',
            default: 'hide'
        },
        switch_on: {
            items: {
                '$ref': '#/components/schemas/Switch'
            },
            type: 'array',
            title: '功能开关'
        },
        timed_interval: {
            type: 'string',
            format: 'duration',
            title: '定时器间隔',
            default: 'PT30M'
        },
        rest_count: {
            type: 'integer',
            title: '休息计数',
            default: 20
        },
        rest_time: {
            type: 'string',
            format: 'duration',
            title: '休息时间',
            default: 'PT1M2S'
        },
        statement: {
            type: 'integer',
            title: '声明',
            default: 3
        }
    },
    type: 'object',
    title: 'Config',
    description: 'Pydantic model for application configuration, converted from ConfigSchema.'
} as const;

export const ConfigSwitchResponseSchema = {
    properties: {
        config: {
            '$ref': '#/components/schemas/Config'
        },
        errors: {
            items: {
                type: 'string'
            },
            type: 'array',
            title: 'Errors',
            description: '加载配置时发生的错误信息列表'
        }
    },
    type: 'object',
    required: ['config', 'errors'],
    title: 'ConfigSwitchResponse'
} as const;

export const CreateSoftlinksBodySchema = {
    properties: {
        source_dir: {
            type: 'string',
            title: 'Source Dir',
            description: '待软链接的源目录'
        },
        dest_dir: {
            type: 'string',
            title: 'Dest Dir',
            description: '创建软链接的目标目录'
        },
        copy_files: {
            type: 'boolean',
            title: 'Copy Files',
            description: '是否复制 nfo, 图片, 字幕等文件',
            default: false
        }
    },
    type: 'object',
    required: ['source_dir', 'dest_dir'],
    title: 'CreateSoftlinksBody'
} as const;

export const DownloadableFileSchema = {
    type: 'string',
    enum: ['poster', 'thumb', 'fanart', 'extrafanart', 'trailer', 'nfo', 'extrafanart_extras', 'extrafanart_copy', 'theme_videos', 'ignore_pic_fail', 'ignore_youma', 'ignore_wuma', 'ignore_fc2', 'ignore_guochan', 'ignore_size'],
    title: 'DownloadableFile',
    showNames: ['海报', '缩略图', '剧照', '额外剧照', '预告片', 'Nfo', '额外剧照扩展', '额外剧照复制', '主题视频', '忽略图片失败', '忽略有码', '忽略无码', '忽略FC2', '忽略国产', '忽略大小']
} as const;

export const EmbyActionSchema = {
    type: 'string',
    enum: ['actor_info_zh_cn', 'actor_info_zh_tw', 'actor_info_ja', 'actor_info_all', 'actor_info_miss', 'actor_photo_net', 'actor_photo_local', 'actor_photo_all', 'actor_photo_miss', 'actor_info_translate', 'actor_info_photo', 'graphis_backdrop', 'graphis_face', 'graphis_new', 'actor_photo_auto', 'actor_replace'],
    title: 'EmbyAction',
    showNames: ['获取简体中文演员信息', '获取繁体中文演员信息', 'Actor Info Ja', 'Actor Info All', 'Actor Info Miss', 'Actor Photo Net', 'Actor Photo Local', 'Actor Photo All', 'Actor Photo Miss', 'Actor Info Translate', 'Actor Info Photo', 'Graphis Backdrop', 'Graphis Face', 'Graphis New', 'Actor Photo Auto', 'Actor Replace']
} as const;

export const FieldRuleSchema = {
    type: 'string',
    enum: ['del_actor', 'del_char', 'fc2_seller', 'del_num'],
    title: 'FieldRule',
    showNames: ['移除标题后的演员名', '移除演员名中的括号', '使用 FC2 卖家作为演员名', '移除番号前缀数字']
} as const;

export const FileItemSchema = {
    properties: {
        name: {
            type: 'string',
            title: 'Name',
            description: 'The name of the file or directory.'
        },
        path: {
            type: 'string',
            title: 'Path',
            description: 'The absolute path of the file or directory.'
        },
        type: {
            type: 'string',
            enum: ['file', 'directory'],
            title: 'Type',
            description: "The type of the item. 'file' or 'directory'."
        },
        size: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Size',
            description: 'The size of the file in bytes. Omitted for directories.'
        },
        last_modified: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Last Modified'
        }
    },
    type: 'object',
    required: ['name', 'path', 'type'],
    title: 'FileItem',
    description: 'Represents a file or directory item.'
} as const;

export const FileListResponseSchema = {
    properties: {
        items: {
            items: {
                '$ref': '#/components/schemas/FileItem'
            },
            type: 'array',
            title: 'Items',
            description: '指定路径下的文件和目录列表. 先目录后文件, 均按名称排序且不区分大小写.'
        },
        total: {
            type: 'integer',
            title: 'Total',
            description: '路径下的文件和目录总数. 若大于 len(data) 说明 data 因文件过多被截断.'
        }
    },
    type: 'object',
    required: ['items', 'total'],
    title: 'FileListResponse',
    description: 'The response structure for the file list endpoint.'
} as const;

export const HDPicSourceSchema = {
    type: 'string',
    enum: ['poster', 'thumb', 'amazon', 'official', 'google', 'goo_only'],
    title: 'HDPicSource',
    showNames: ['poster', 'thumb', 'Amazon', '官网', 'Google', '仅 Google']
} as const;

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const KeepableFileSchema = {
    type: 'string',
    enum: ['poster', 'thumb', 'fanart', 'extrafanart', 'trailer', 'nfo', 'extrafanart_copy', 'theme_videos'],
    title: 'KeepableFile',
    showNames: ['海报', '缩略图', '剧照', '额外剧照', '预告片', 'nfo', '复制额外剧照', '主题视频']
} as const;

export const MarkTypeSchema = {
    type: 'string',
    enum: ['sub', 'youma', 'umr', 'leak', 'uncensored', 'hd'],
    title: 'MarkType',
    showNames: ['字幕', '有码', '破解', '流出', '无码', '高清']
} as const;

export const NfoIncludeSchema = {
    type: 'string',
    enum: ['sorttitle', 'originaltitle', 'title_cd', 'outline', 'plot_', 'originalplot', 'outline_no_cdata', 'release_', 'releasedate', 'premiered', 'country', 'mpaa', 'customrating', 'year', 'runtime', 'wanted', 'score', 'criticrating', 'actor', 'actor_all', 'director', 'series', 'tag', 'genre', 'actor_set', 'series_set', 'studio', 'maker', 'publisher', 'label', 'poster', 'cover', 'trailer', 'website'],
    title: 'NfoInclude',
    showNames: ['排序标题', '原始标题', '标题CD', '简介', '剧情', '原始剧情', '无CDATA简介', '发布', '发布日期', '首映', '国家', 'MPAA', '自定义评分', '年份', '时长', '想看', '评分', '评论家评分', '演员', '所有演员', '导演', '系列', '标签', '类型', '演员集', '系列集', '工作室', '制造商', '发行商', '标签', '海报', '封面', '预告片', '网站']
} as const;

export const NoEscapeSchema = {
    type: 'string',
    enum: ['no_skip_small_file', 'folder', 'skip_success_file', 'record_success_file', 'check_symlink', 'symlink_definition'],
    title: 'NoEscape',
    showNames: ['不跳过小文件', '目录', '跳过成功文件', '记录成功文件', '检查符号链接', '符号链接定义']
} as const;

export const NoneFieldSchema = {
    type: 'string',
    enum: ['outline', 'actor', 'thumb', 'poster', 'extrafanart', 'trailer', 'release', 'runtime', 'score', 'tag', 'director', 'series', 'studio', 'publisher', 'wanted'],
    title: 'NoneField',
    showNames: ['简介', '演员', '缩略图', '海报', '附加剧照', '预告片', '发布日期', '时长', '评分', '标签', '导演', '系列', '工作室', '发行商', '想看']
} as const;

export const OutlineShowSchema = {
    type: 'string',
    enum: ['show_from', 'show_zh_jp', 'show_jp_zh'],
    title: 'OutlineShow',
    showNames: ['显示来源', '显示中日', '显示日中']
} as const;

export const ReadModeSchema = {
    type: 'string',
    enum: ['has_nfo_update', 'no_nfo_scrape', 'read_download_again', 'read_update_nfo'],
    title: 'ReadMode',
    showNames: ['有NFO时更新', '无NFO时刮削', '重新下载', '更新NFO']
} as const;

export const ScrapeFileBodySchema = {
    properties: {
        path: {
            type: 'string',
            title: 'Path'
        },
        url: {
            type: 'string',
            title: 'Url'
        }
    },
    type: 'object',
    required: ['path', 'url'],
    title: 'ScrapeFileBody'
} as const;

export const SetSiteUrlBodySchema = {
    properties: {
        site: {
            '$ref': '#/components/schemas/Website'
        },
        url: {
            type: 'string',
            title: 'Url'
        }
    },
    type: 'object',
    required: ['site', 'url'],
    title: 'SetSiteUrlBody'
} as const;

export const ShowLocationSchema = {
    type: 'string',
    enum: ['folder', 'file'],
    title: 'ShowLocation',
    showNames: ['目录', '文件']
} as const;

export const SuffixSortSchema = {
    type: 'string',
    enum: ['moword', 'cnword', 'definition'],
    title: 'SuffixSort',
    showNames: ['马赛克', '中文字幕', '清晰度']
} as const;

export const SwitchSchema = {
    type: 'string',
    enum: ['auto_start', 'auto_exit', 'rest_scrape', 'timed_scrape', 'remain_task', 'show_dialog_exit', 'show_dialog_stop_scrape', 'sort_del', 'ipv4_only', 'qt_dialog', 'theporndb_no_hash', 'hide_dock', 'passthrough', 'hide_menu', 'dark_mode', 'copy_netdisk_nfo', 'show_logs', 'hide_close', 'hide_mini', 'hide_none'],
    title: 'Switch',
    showNames: ['自动开始', '自动退出', 'Rest Scrape', 'Timed Scrape', 'Remain Task', 'Show Dialog Exit', 'Show Dialog Stop Scrape', 'Sort Del', 'Ipv4 Only', 'Qt Dialog', 'Theporndb No Hash', 'Hide Dock', 'Passthrough', 'Hide Menu', 'Dark Mode', 'Copy Netdisk Nfo', 'Show Logs', 'Hide Close', 'Hide Mini', 'Hide None']
} as const;

export const TagIncludeSchema = {
    type: 'string',
    enum: ['actor', 'letters', 'series', 'studio', 'publisher', 'cnword', 'mosaic', 'definition'],
    title: 'TagInclude',
    showNames: ['演员', '字母', 'Series', 'Studio', 'Publisher', 'Cnword', 'Mosaic', 'Definition']
} as const;

export const TranslatorSchema = {
    type: 'string',
    enum: ['youdao', 'google', 'deepl', 'llm'],
    title: 'Translator',
    showNames: ['有道', '谷歌', 'Deepl', 'LLM']
} as const;

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;

export const WebsiteSchema = {
    type: 'string',
    enum: ['airav', 'airav_cc', 'avsex', 'avsox', 'cableav', 'cnmdb', 'dmm', 'faleno', 'fantastica', 'fc2', 'fc2club', 'fc2hub', 'fc2ppvdb', 'freejavbt', 'getchu', 'giga', 'hdouban', 'hscangku', 'iqqtv', 'jav321', 'javbus', 'javday', 'javdb', 'javlibrary', 'kin8', 'love6', 'lulubar', 'madouqu', 'mdtv', 'mgstage', '7mmtv', 'mywife', 'prestige', 'theporndb', 'xcity'],
    title: 'Website',
    showNames: ['AIRAV', 'AIRAV_CC', 'AVSEX', 'AVSOX', 'CABLEAV', 'CNMDB', 'DMM', 'FALENO', 'FANTASTICA', 'FC2', 'FC2CLUB', 'FC2HUB', 'FC2PPVDB', 'FREEJAVBT', 'GETCHU', 'GIGA', 'HDOUBAN', 'HSCANGKU', 'IQQTV', 'JAV321', 'JAVBUS', 'JAVDAY', 'JAVDB', 'JAVLIBRARY', 'KIN8', 'LOVE6', 'LULUBAR', 'MADOUQU', 'MDTV', 'MGSTAGE', 'MMTV', 'MYWIFE', 'PRESTIGE', 'THEPORNDB', 'XCITY']
} as const;

export const WebsiteSetSchema = {
    type: 'string',
    enum: ['official'],
    title: 'WebsiteSet',
    showNames: ['官网']
} as const;

export const WholeFieldSchema = {
    type: 'string',
    enum: ['outline', 'actor', 'thumb', 'poster', 'extrafanart', 'trailer', 'release', 'runtime', 'score', 'tag', 'director', 'series', 'studio', 'publisher'],
    title: 'WholeField',
    showNames: ['简介', '演员', '缩略图', '海报', '附加剧照', '预告片', '发布日期', '时长', '评分', '标签', '导演', '系列', '工作室', '发行商']
} as const;